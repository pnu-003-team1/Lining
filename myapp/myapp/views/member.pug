doctype html
head
  meta(charset='UTF-8')
  title sign up
  link(rel='stylesheet', href='/stylesheets/member.css')
br
form(name='fr', action='/member', method='post', onsubmit="checkPW()")
  input#email(name='email', type='email' placeholder='E-MAIL')
  input#chk_email(type='button', value='confirm email', onclick='checkEMAIL()')
  br
  input(name='pw', type='password' placeholder='PASSWORD')
  br
  input(name='chk_pw', type='password' placeholder='PASSWORD_CHECK')
  br
  input(name='bname', type='text' placeholder='STORE_NAME')
  br
  input(name='tel', type='text' placeholder='STORE_TEL')
  br
  input#sample5_address(type='text', name='addr',laceholder='STORE_ADDRESS')
  input(type='button', onclick='sample5_execDaumPostcode()', value='주소 검색')
  input#longitude(type='hidden' name='longitude' )
  input#latitude(type='hidden' name='latitude' )
  br
  br
  input(type='submit', value='submit')
script(src='//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js')
script(src='//d1p7wdleee1q2z.cloudfront.net/post/search.min.js')
script(src='http://dmaps.daum.net/map_js_init/postcode.v2.js')
script(src='//dapi.kakao.com/v2/maps/sdk.js?appkey=fd7c2f66313504873a90a8d7de8d32c8&libraries=services')
script(type='text/javascript').
$(function() { $("#postcodify_search_button").postcodifyPopUp(); });
var emailChecked = false;


//주소-좌표 변환 객체를 생성
var geocoder = new daum.maps.services.Geocoder();

function sample5_execDaumPostcode() {
new daum.Postcode({
oncomplete: function(data) {
// 각 주소의 노출 규칙에 따라 주소를 조합한다.
// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
var fullAddr = data.address; // 최종 주소 변수
var extraAddr = ''; // 조합형 주소 변수
// 기본 주소가 도로명 타입일때 조합한다.
if(data.addressType === 'R'){
//법정동명이 있을 경우 추가한다.
if(data.bname !== ''){
extraAddr += data.bname;
}
// 건물명이 있을 경우 추가한다.
if(data.buildingName !== ''){
extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
}
// 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
}
// 주소 정보를 해당 필드에 넣는다.
document.getElementById("sample5_address").value = fullAddr;
// 주소로 상세 정보를 검색
geocoder.addressSearch(data.address, function(results, status) {
// 정상적으로 검색이 완료됐으면
if (status === daum.maps.services.Status.OK) {
var result = results[0]; //첫번째 결과의 값을 활용
// 해당 주소에 대한 좌표를 받아서
var coords = new daum.maps.LatLng(result.y, result.x);
var latitude = document.getElementById('latitude');
var longitude = document.getElementById('longitude');
latitude.value = result.y;
longitude.value = result.x;
console.log("1.지도===="+result.y);
console.log("2.지도===="+result.x);
}
});
}
}).open();
}

  function checkPW() {
  if (fr.pw.value == "" || fr.chk_pw.value == "") {
  alert("패스워드를 입력해주세요!!");
    fr.pw.focus();
    return false;
  }
  if (fr.pw.value != fr.chk_pw.value) {
  alert("패스워드가 일치하지 않습니다!!");
    fr.pw.focus();
    return false;
  }
  if (emailChecked == false) {
    alert("이메일 중복 확인을 해주세요!!");
    return false;
  }
  return true;
  }
  function checkEMAIL() {
  var obj1 = fr.email.value;
  if (obj1 == "")
  alert("please write your email down");
  else {
  var form = document.createElement("form");
  form.setAttribute("method", "post");
  form.setAttribute("action", "/member/repetition");
  var hiddenField = document.createElement("input");
  hiddenField.setAttribute("type", "hidden");
  hiddenField.setAttribute("name", "email");
  hiddenField.setAttribute("value", obj1);
  form.appendChild(hiddenField);
  var url = "http://54.180.123.67:3000/buser/repetition";
  var title = "sign up";
  var status = "toolbar=no,directories=no,scrollbars=no,resizable=no,status=no,menubar=no,width=200, height=200, top=50,left=50";
  window.open("", title, status);
  form.target = title;
  document.body.appendChild(form);
  form.submit();
  emailChecked = true;
  }
  }
